" ---------------------------------------------------------------------------------------------------------------------
set nocompatible

" Set Dein base path (required)
let s:dein_base = '/Users/hiroshi/.cache/dein'

" Set Dein source path (required)
let s:dein_src = '/Users/hiroshi/.cache/dein/repos/github.com/Shougo/dein.vim'

" Set Dein runtime path (required)
execute 'set runtimepath+=' . s:dein_src

" Call Dein initialization (required)
call dein#begin(s:dein_base)

call dein#add(s:dein_src)

" Your plugins go here:
call dein#add('Shougo/neosnippet.vim')
call dein#add('Shougo/neosnippet-snippets')

call dein#add('Shougo/ddc.vim')
call dein#add('vim-denops/denops.vim')
call dein#add('Shougo/ddc-ui-native')
call dein#add('Shougo/ddc-source-around')
call dein#add('Shougo/ddc-matcher_head')
call dein#add('Shougo/ddc-sorter_rank')

call dein#add('itchyny/lightline.vim')
call dein#add('Yggdroot/indentLine')
call dein#add('junegunn/vim-easy-align')
call dein#add('altercation/vim-colors-solarized')

" Finish Dein initialization (required)
call dein#end()

" Attempt to determine the type of a file based on its name and possibly its
" contents. Use this to allow intelligent auto-indenting for each filetype,
" and for plugins that are filetype specific.
if has('filetype')
  filetype indent plugin on
endif

" Enable syntax highlighting
if has('syntax')
  syntax on
endif

" Uncomment if you want to install not-installed plugins on startup.
if dein#check_install()
 call dein#install()
endif

" ---------------------------------------------------------------------------------------------------------------------
" file encodings
set encoding=utf-8
set fileencodings=utf-8,cp932,euc-jp

" general settings
set wrap
set showcmd
set cursorline
set smartcase
set showmatch
set matchtime=1

" view
set number
set ruler
set laststatus=2 "show status line at any time
set colorcolumn=120
highlight ColorColumn ctermbg = 239

" behavior
set backspace=indent,eol,start
set nobackup
set writebackup
set history=50
set hlsearch
set autoindent
set smartindent
set expandtab
set tabstop=2
set shiftwidth=2
set ignorecase
autocmd BufWritePre * :%s/\s\+$//e "truncate line-tail space(s)

augroup filetypedetect
  " override tab size by detecting file type
  au BufNewFile,BufRead *.php setlocal tabstop=4 shiftwidth=4
augroup END

" ---------------------------------------------------------------------------------------------------------------------
" PLUGIN: Shougo/ddc.vim
call ddc#custom#patch_global('ui', 'native')
call ddc#custom#patch_global('sources', ['around'])
call ddc#custom#patch_global('sourceOptions', #{
      \ _: #{
      \   matchers: ['matcher_head'],
      \   sorters: ['sorter_rank']},
      \ })

" Change source options
call ddc#custom#patch_global('sourceOptions', #{
      \   around: #{ mark: 'A' },
      \ })
call ddc#custom#patch_global('sourceParams', #{
      \   around: #{ maxSize: 500 },
      \ })

" Mappings
" <TAB>: completion.
inoremap <silent><expr> <TAB>
\ pumvisible() ? '<C-n>' :
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
\ '<TAB>' : ddc#map#manual_complete()

" <S-TAB>: completion back.
inoremap <expr><S-TAB>  pumvisible() ? '<C-p>' : '<C-h>'

" Use ddc.
call ddc#enable()

" PLUGIN: Yggdroot/indentLine
let g:indentLine_color_term = 239

" PLUGIN: junegunn/vim-easy-align
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

" PLUGIN: altercation/vim-colors-solarized
set background=dark
colorscheme solarized
